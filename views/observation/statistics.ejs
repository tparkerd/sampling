<% include ../partials/header %>

<div class="container">
  <h5>Statistics</h5>
  <% if (data) { %>
    <div class="container row">
      <div class="container col-lg-6">
        <canvas id="myChart"></canvas>
      </div>
      <div class="container col-lg-6">
        <canvas id="myChart2"></canvas>
      </div>
    </div>
  <% } else  { %>
    <h5>No samples have been evaluated yet!</h5>
  <% } %>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.js" charset="utf-8"></script>
<script>
var data = {
    labels: [<%- data.users.names %>],
        datasets: [{
          data: Array(3).fill().map(Math.random).map(x => x * 100).map(Math.floor),
          backgroundColor: 'rgba(218, 218, 218, 1)',
          hoverBackgroundColor: 'rgba(201, 201, 201, 1)'
        }, {
          data: Array(3).fill().map(Math.random).map(x => x * 100).map(Math.floor),
          backgroundColor: 'rgba(255, 242, 125, 1)',
          hoverBackgroundColor: 'rgba(255, 233, 139, 1)'
        }, {
          data: Array(3).fill().map(Math.random).map(x => x * 100).map(Math.floor),
          backgroundColor: 'rgba(255, 172, 103, 1)',
          hoverBackgroundColor: 'rgba(255, 149, 82, 1)'
        }, {
          data: Array(3).fill().map(Math.random).map(x => x * 100).map(Math.floor),
          backgroundColor: 'rgba(255, 92, 92, 1)',
          hoverBackgroundColor: 'rgba(255, 65, 65, 1)'
        }],
        borderWidth: 1
}
var dataSample = {
  labels: ['Absent', 'Mild', 'Moderate', 'Severe'],
  datasets: [{
      label: '# of Ratings',
      data: [ <%- data.sampleCounts %> ],
      backgroundColor: [
          'rgba(201, 201, 201, 0.8)',
          'rgba(233, 250, 47, 0.8)',
          'rgba(255, 166, 62, 0.8)',
          'rgba(245, 59, 59, 0.8)'
      ],
      hoverBorderColor: [
        'rgb(255, 255, 255)',
        'rgb(255, 255, 255)',
        'rgb(255, 255, 255)',
        'rgb(255, 255, 255)'
      ],
      borderWidth: 2,
  }]
}
var ctx = document.getElementById("myChart").getContext('2d');
var myChart = new Chart(ctx, {
    type: 'horizontalBar',
    data: data,
    options: {
      title: {
        display: true,
        text: '# of Evaluations per User',
      },
      tooltips: {
        callbacks: {
          label: function(tooltipItem, data) {
            let individualTotals = new Array(data.datasets[0].data.length).fill(0)
            // Get the individual's total contributions
            // For each level of severity..
            for (let i = 0; i < data.datasets.length; i++) {
              // For each person's count...
              for (let j = 0; j < data.datasets[i].data.length; j++) {
                // Add that level of severity to their respective total
                individualTotals[j] += data.datasets[i].data[j]
              }
            }

            var dataset = data.datasets[tooltipItem.datasetIndex];
            var currentValue = dataset.data[tooltipItem.index];
            var precentage = Math.floor(((currentValue/individualTotals[tooltipItem.index]) * 100)+0.5);
            return precentage + "%" + ' (' + currentValue + ' of ' + individualTotals[tooltipItem.index] + ')';
          }
        }
      },
      scales: {
          xAxes: [{
            stacked: true
          }],
          yAxes: [{
            stacked: true,
              ticks: {
                  beginAtZero:true
              }
          }]
      },
      legend: {
        display: false
      }
    }
});


var ctx = document.getElementById("myChart2").getContext('2d');
var myChart = new Chart(ctx, {
    type: 'doughnut',
    data: dataSample,
    options: {
      cutoutPercentage: 40,
      responsive: true,
      legend: {
        position: 'bottom',
      },
      title: {
        display: true,
        text: '# of Ratings per Classification'
      },
      animation: {
        animateScale: true,
        animateRotate: true
      },
      tooltips: {
        callbacks: {
          label: function(tooltipItem, data) {
            var dataset = data.datasets[tooltipItem.datasetIndex];
            var total = dataset.data.reduce(function(previousValue, currentValue, currentIndex, array) {
              return previousValue + currentValue;
            });
            var currentValue = dataset.data[tooltipItem.index];
            var precentage = Math.floor(((currentValue/total) * 100)+0.5);
            return precentage + "%" + ' (' + currentValue + ' of ' + dataset.data.reduce((a,b) => a + b, 0) + ')';
          }
        }
      }
    }
})
</script>



<% include ../partials/footer %>
